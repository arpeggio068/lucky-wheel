var store = localforage.createInstance({
    name: "myDatabaseScammer888"
  });   

  const canvas = document.getElementById("wheel");
  const ctx = canvas.getContext("2d");
  const spinBtn = document.getElementById("spinBtn");
  const result = document.getElementById("result");

  const prizes = ["1X", "1.5X", "2X", "2.5X", "3X", "-1X", "-1.5X", "-2X", "-2.5X", "-3X"];
  const numSegments = prizes.length;
  const arcSize = (2 * Math.PI) / numSegments;

  // üåÄ ‡∏ß‡∏≤‡∏î‡∏ß‡∏á‡∏•‡πâ‡∏≠
  function drawWheel(highlightIndex = -1, blink = false) {
    ctx.clearRect(0, 0, 400, 400);
    for (let i = 0; i < numSegments; i++) {
      const angle = i * arcSize;
      ctx.beginPath();
      ctx.moveTo(200, 200);
      ctx.arc(200, 200, 200, angle, angle + arcSize);
      ctx.fillStyle = i % 2 === 0 ? "#ffcc00" : "#ff9966";
      ctx.fill();

      ctx.save();
      ctx.translate(200, 200);
      ctx.rotate(angle + arcSize / 2);
      ctx.font = "bold 22px Prompt";
      ctx.textAlign = "right";

      if (i === highlightIndex) {
        ctx.fillStyle = blink ? "transparent" : "red";
      } else {
        ctx.fillStyle = "#333";
      }

      ctx.fillText(prizes[i], 180, 10);
      ctx.restore();
    }
  }

  drawWheel();

  let currentRotation = 0;
 // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≠‡∏ö (‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÑ‡∏ß‡πâ‡∏ô‡∏≠‡∏Å event listener)
let spinCount = 0;
let negativeCountInSet = 0;

spinBtn.addEventListener("click", async () => {
  spinBtn.disabled = true;
  console.log("negativeCountInSet:", negativeCountInSet);
  console.log("spinCount:", spinCount);

  // üßπ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏ß‡∏á‡∏•‡πâ‡∏≠‡πÉ‡∏´‡πâ‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏ï‡∏±‡πâ‡∏á‡∏ï‡πâ‡∏ô
  drawWheel();
  result.textContent = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏´‡∏°‡∏∏‡∏ô...";

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡∏ô‡∏±‡∏ö‡∏£‡∏≠‡∏ö
  spinCount++;

  // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏£‡∏ö 10 ‡∏£‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡∏ô‡∏±‡∏ö‡∏ä‡∏∏‡∏î‡πÉ‡∏´‡∏°‡πà
  if (spinCount % 10 === 1) {
    negativeCountInSet = 0;
  }

  // üß© ‡πÅ‡∏¢‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ö‡∏ß‡∏Å/‡∏•‡∏ö
  const positivePrizes = prizes.filter(p => !p.startsWith("-"));
  const negativePrizes = prizes.filter(p => p.startsWith("-"));

  let chosenPrize;

  // ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç: ‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡∏∏‡∏î 10 ‡∏£‡∏≠‡∏ö ‡πÉ‡∏´‡πâ‡∏Ñ‡πà‡∏≤‡∏•‡∏ö‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 3 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
  if (negativeCountInSet < 3) {
    const isNegativeRound = Math.random() < 0.3; // 30% ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏•‡∏ö
    if (isNegativeRound) {
      chosenPrize = negativePrizes[Math.floor(Math.random() * negativePrizes.length)];
      negativeCountInSet++;
    } else {
      chosenPrize = positivePrizes[Math.floor(Math.random() * positivePrizes.length)];
    }
  } else {
    chosenPrize = positivePrizes[Math.floor(Math.random() * positivePrizes.length)];
  }

  // ‡∏´‡∏≤ index ‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô array prizes ‡πÄ‡∏î‡∏¥‡∏°
  const actualIndex = prizes.indexOf(chosenPrize);

  const extraSpins = 5;
  const targetAngle = (360 / numSegments) * actualIndex + 360 * extraSpins + 18;

  currentRotation += targetAngle;
  canvas.style.transition = "transform 5s cubic-bezier(0.2, 0.9, 0.3, 1)";
  canvas.style.transform = `rotate(${currentRotation}deg)`;

  setTimeout(async () => {
    const winning = prizes[actualIndex];
    result.innerHTML = `üéâ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå: <b>${winning}</b>`;

    // üßÆ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•
    const bet = parseInt(document.getElementById("betAmount").value);
    const multiplier = parseFloat(winning.replace("X", "")); // "2.5X" ‚Üí 2.5
    const reward = bet * multiplier;

    // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô
    gEquity += reward;
    document.getElementById("equityValue").textContent = gEquity.toLocaleString();

    // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏•‡∏±‡∏ö‡∏•‡∏á localforage
    await store.setItem("equity", gEquity);
    console.log(`üè¶ Updated equity: ${gEquity}`);

    // üåü ‡πÅ‡∏™‡∏î‡∏á SweetAlert2
    if (reward > 0) {
      Swal.fire({
        icon: "success",
        title: "üéâ ‡∏ä‡∏ô‡∏∞!",
        html: `<h3 style="color:green;">‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö: ${reward.toLocaleString()} ‡∏ö‡∏≤‡∏ó</h3>`,
        background: "#f6fff5",
        confirmButtonColor: "#28a745",
        confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á"
      });
    } else if (reward < 0) {
      Swal.fire({
        icon: "error",
        title: "üò¢ ‡πÅ‡∏û‡πâ!",
        html: `<h3 style="color:red;">‡πÄ‡∏™‡∏µ‡∏¢‡πÄ‡∏á‡∏¥‡∏ô: ${reward.toLocaleString()} ‡∏ö‡∏≤‡∏ó</h3>`,
        background: "#fff5f5",
        confirmButtonColor: "#d33",
        confirmButtonText: "‡πÇ‡∏≠‡πÄ‡∏Ñ"
      });
    } else {
      Swal.fire({
        icon: "info",
        title: "‡πÄ‡∏™‡∏°‡∏≠",
        text: "‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏µ‡∏¢",
        confirmButtonColor: "#3085d6",
        confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á"
      });
    }

    // üåü ‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏ß‡∏á‡∏•‡πâ‡∏≠
    let blinkCount = 0;
    const blinkInterval = setInterval(() => {
      drawWheel(actualIndex, blinkCount % 2 === 0);
      blinkCount++;
      if (blinkCount > 6) { // ‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö 3 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
        clearInterval(blinkInterval);
        drawWheel(actualIndex, false);
        spinBtn.disabled = false;
      }
    }, 300);
  }, 5000);

});

document.getElementById("btn1").addEventListener("click", async () => {
  const nameInput = document.getElementById("victim_name");
  const name = nameInput.value.trim();

  if (!name) {
    Swal.fire({
      icon: "warning",
      title: "‚ö†Ô∏è ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°!",
      confirmButtonColor: "#ffcc00"
    });
    nameInput.focus();
    return;
  }

  try {
    // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô localforage
    await store.setItem("victim_name", name);

    // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á SweetAlert ‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏•
    Swal.fire({
      icon: "success",
      title: `üéØ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö ${name}!`,
      html: "‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô 100,000 ‡∏ö‡∏≤‡∏ó <br> ‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡πÇ‡∏ä‡∏Ñ‡∏î‡∏µ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏∏‡∏ô‡∏ß‡∏á‡∏•‡πâ‡∏≠ üçÄ",
      confirmButtonColor: "#28a745"
    });

    // ‚úÖ ‡∏ã‡πà‡∏≠‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Å‡∏°
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
    const gameDetail = document.getElementById("game-detail");
    const victimDetail = document.getElementById("victim-detail");

    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤ display ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏°‡∏µ class ‡∏ã‡πâ‡∏≠‡∏ô‡∏Å‡∏±‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
    gameDetail.classList.remove("show", "hide");
    victimDetail.classList.remove("show", "hide");

    victimDetail.classList.add("hide");
    gameDetail.classList.add("show");

    // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô navbar (‡πÅ‡∏ó‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏õ‡πâ‡∏≠‡∏°)
    const welcomeEl = document.querySelector(".welcome-text");
    if (welcomeEl) {
      welcomeEl.textContent = `üëã ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì ${name}`;
    }
  } catch (error) {
    console.error("‚ùå Error while saving victim_name:", error);
    Swal.fire({
      icon: "error",
      title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!",
      text: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á",
      confirmButtonColor: "#d33"
    });
  }
});

document.getElementById("withdraw").addEventListener("click", async (e) => {
  e.preventDefault(); // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏±‡∏ô‡∏ó‡∏µ

  try {
    // ‡∏î‡∏∂‡∏á‡∏¢‡∏≠‡∏î‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏à‡∏≤‡∏Å localforage (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏™‡∏∏‡∏î)
    let balance = gEquity || await store.getItem("equity");
    balance = Number(balance);

    if (balance < 100000) {
      // ‚ùå ‡∏Å‡∏£‡∏ì‡∏µ‡∏¢‡∏≠‡∏î‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 100,000
      Swal.fire({
        icon: "warning",
        title: "‚ö†Ô∏è ‡∏ñ‡∏≠‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ!",
        html: `‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡πÄ‡∏û‡∏µ‡∏¢‡∏á <b>${balance.toLocaleString()}</b> ‡∏ö‡∏≤‡∏ó<br>‡∏¢‡∏≠‡∏î‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡∏ß‡πà‡∏≤ 100,000 ‡∏ö‡∏≤‡∏ó`,
        confirmButtonColor: "#ff8800"
      });
    } else {
      // ‚úÖ ‡∏¢‡∏≠‡∏î‡πÄ‡∏Å‡∏¥‡∏ô 100,000 ‚Üí ‡πÑ‡∏õ‡∏ó‡∏µ‡πà Google
      Swal.fire({
        icon: "success",
        title: "‚úÖ ‡∏ñ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
        text: "‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ô‡∏≥‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£...",
        showConfirmButton: false,
        timer: 1500
      });

      setTimeout(() => {
        window.open("https://arpeggio068.github.io/scam-landing/", "_blank");
      }, 1500);
    }

  } catch (error) {
    console.error("‚ùå Error checking balance:", error);
    Swal.fire({
      icon: "error",
      title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!",
      text: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á",
      confirmButtonColor: "#d33"
    });
  }
});



// ==============================
// ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤ equity ‡∏ï‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
// ==============================
let gEquity;
let gName;

document.addEventListener("DOMContentLoaded", async () => {
  try {
    gEquity = await store.getItem("equity");
    gName = await store.getItem("victim_name");

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
    const gameDetail = document.getElementById("game-detail");
    const victimDetail = document.getElementById("victim-detail");

    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤ display ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏°‡∏µ class ‡∏ã‡πâ‡∏≠‡∏ô‡∏Å‡∏±‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
    gameDetail.classList.remove("show", "hide");
    victimDetail.classList.remove("show", "hide");

    if (!gName) {
      gameDetail.classList.add("hide");
      victimDetail.classList.add("show");
      
    } else {
      victimDetail.classList.add("hide");
      gameDetail.classList.add("show");
      const welcomeEl = document.querySelector(".welcome-text");
      if (welcomeEl) {
        welcomeEl.textContent = `üëã ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì ${gName}`;
      }
    }

    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ equity ‚Üí ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    if (!gEquity) {
      gEquity = 100000;
      await store.setItem("equity", gEquity);
    }

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô
    document.getElementById("equityValue").textContent = gEquity.toLocaleString();
    console.log("üí∞ Equity loaded successfully:", gEquity);

  } catch (error) {
    console.error("‚ùå Error while saving/loading equity:", error);
  }
});